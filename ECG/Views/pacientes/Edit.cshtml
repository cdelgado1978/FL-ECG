@model ECG_DB.paciente

@{
    ViewBag.Title = "Edit";
}

<h2>Ecitar Paciente: @string.Concat(@Model.nombre, " ", @Model.apellidos)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>paciente</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.paciente_id)

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha_nacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group date">
                    <input type="text" id="fecha_nacimiento" name="fecha_nacimiento" class="form-control datepicker" value="@Model.fecha_nacimiento.ToShortDateString()"/>
                    @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.genero, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10 ">
                <select id="genero" name="genero" class="form-control">
                    <option value="F">Femenino</option>
                    <option value="M">Masculino</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.activo)
                    @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
